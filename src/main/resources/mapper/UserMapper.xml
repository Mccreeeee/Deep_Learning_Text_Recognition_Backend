<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hnsfdx.deeplearningtextrecognition.mapper.UserMapper">
    <resultMap id="userResultMap" type="com.hnsfdx.deeplearningtextrecognition.pojo.User">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="loginName" column="login_name" jdbcType="VARCHAR"/>
        <result property="loginPwd" column="login_pwd" jdbcType="VARCHAR"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="userAvatar" column="user_avatar" jdbcType="VARCHAR"/>
        <result property="registerTime" column="register_time" jdbcType="TIMESTAMP"/>
        <result property="loginTime" column="login_time" jdbcType="TIMESTAMP"/>
    </resultMap>
    <select id="findByLoginName" parameterType="String" resultMap="userResultMap">
        select * from users where login_name = #{loginName}
    </select>

    <insert id="saveUser" parameterType="com.hnsfdx.deeplearningtextrecognition.pojo.User">
        insert into users (login_name, login_pwd, user_name, user_avatar, register_time, login_time)
        values (#{loginName}, MD5(#{loginPwd}), #{userName}, #{userAvatar}, #{registerTime}, #{loginTime})
    </insert>

    <delete id="deleteUser" parameterType="String">
         delete from users where login_name = #{loginName}
    </delete>

    <update id="updateUser" parameterType="com.hnsfdx.deeplearningtextrecognition.pojo.User">
        UPDATE users
        <set>
            <if test="loginPwd != null">login_pwd = MD5(#{loginPwd}),</if>
            <if test="userName != null">user_name = #{userName},</if>
            <if test="userAvatar != null">user_avatar = #{userAvatar},</if>
            <if test="loginTime != null">login_time = #{loginTime},</if>
        </set>
        WHERE login_name = #{loginName}
    </update>

    <select id="findLoginUser" parameterType="Map" resultMap="userResultMap">
        select id, login_name, user_name, user_avatar, register_time, login_time
        from users
        where login_name = #{loginName} and login_pwd = MD5(#{loginPwd})
    </select>

    <select id="findAllAvatarUrl" resultType="String">
        select user_avatar from users
    </select>
</mapper>